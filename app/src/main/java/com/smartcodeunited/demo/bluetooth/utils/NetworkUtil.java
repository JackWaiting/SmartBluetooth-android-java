/* * Copyright (C) 2016 SmartCodeUnited http://www.smartcodeunited.com * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.smartcodeunited.demo.bluetooth.utils;import android.content.Context;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.net.NetworkInfo.State;import android.text.TextUtils;/** * Created by JackWaiting on 2016/10/19. * State of network layer */public class NetworkUtil {	/** Available network type names, such as: WIFI or MOBILE */	public static String NETWORK_NAME = "unknown";		/**	 * The current network is available	 * 	 * @return True network available; False network is unavailable */	public static boolean isAvailable(Context context) {		if(context == null){			return false;		}		ConnectivityManager cManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);		boolean flag = false;		if (cManager != null) {			NetworkInfo netInfo = cManager.getActiveNetworkInfo();			if (netInfo != null && netInfo.isConnected()) {				flag = true;				NETWORK_NAME = getTypeName(cManager);			}		}		return flag;	}	public static String getNetworkName(Context context) {		ConnectivityManager cManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);		if (cManager != null) {			NetworkInfo netInfo = cManager.getActiveNetworkInfo();			if (netInfo != null && netInfo.isConnected()) {				NETWORK_NAME = getTypeName(cManager);			}		}		return NETWORK_NAME;	}	public static boolean isWifi(Context context){		return TextUtils.equals("WIFI", getNetworkName(context));	}	private static String getTypeName(ConnectivityManager cManager) {		String name = "";		State wifiState = State.UNKNOWN;		if (null != cManager.getNetworkInfo(1)) {			wifiState = cManager.getNetworkInfo(1).getState();		}		State mobileState = State.UNKNOWN;		if (null != cManager.getNetworkInfo(0)) {			mobileState = cManager.getNetworkInfo(0).getState();		}		if (wifiState == State.CONNECTED || wifiState == State.CONNECTING) {			// wifi			name = "WIFI";		} else if (mobileState == State.CONNECTED || mobileState == State.CONNECTING) {			// mobile			name = "MOBILE";		}		return name;	}}